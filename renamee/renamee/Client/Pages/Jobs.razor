@page "/jobs"
@using renamee.Shared.Models;
@using renamee.Client.Components;

<PageTitle>Jobs</PageTitle>

<MudText Typo="Typo.h4" Class="ml-5 mt-6" Style="display: inline-block">Jobs</MudText>
<MudFab StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" Size="Size.Small" Class="ml-5 mb-3" OnClick="@(async () => await Add())"/>

@if (jobs == null)
{
    <p><em>Loading jobs...</em></p>
}
else
{
    <MudExpansionPanels Class="ma-4">
        @foreach (var job in jobs)
        {
            <MudExpansionPanel Text="@job.Name">
                <TitleContent>
                    <MudChip Label="true" Size="Size.Small" Color="@(job.IsEnabled ? Color.Success : Color.Error)">@(job.IsEnabled ? "enabled" : "disabled")</MudChip>

                    <MudText Typo="Typo.h6">@job.Name</MudText>

                    <MudText Typo="Typo.caption" Align="Align.Right" Style="width: 100%">Last executed on: @job.LastExecutedOn.ToString("yyyy.MM.dd HH:mm")</MudText>
                </TitleContent>
                <ChildContent>

                    <JobSummary Job="@job" />

                    <div class="mt-4">
                        <MudSwitch 
                            @bind-Checked="@job.IsEnabled" 
                            @onclick="() => OnIsEnabledChanged(job)"
                            Color="Color.Success">@(job.IsEnabled ? "Enabled" : "Disabled")</MudSwitch>

                    </div>

                    <div Class="mt-4">
                        <MudButton Variant="Variant.Outlined" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Edit" OnClick="@(async () => await Edit(job))" Class="">Edit</MudButton>
                        <MudButton Variant="Variant.Outlined" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete" OnClick="@(async () => await Delete(job))" Class="ml-2">Delete</MudButton>
                    </div>

                </ChildContent>

            </MudExpansionPanel>
        }
    </MudExpansionPanels>


}

